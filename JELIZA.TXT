!!                  *************Attention************
!!お客様は、このマクロサンプルプログラムを現状のままで、もしくは改変した
!!プログラムを第三者に配布することができます。                          
!!
!!ただし、このプログラムは株式会社ジャストシステムが作成したのものであり、
!!このプログラムの著作権は、株式会社ジャストシステムに帰属します。
!!従いまして、以下の条件に同意、遵守していただいた上でご利用下さいますよ
!!うお願いいたします。
!!
!!①このプログラム及びお客様が改変したプログラムを配布する場合は、無償に
!!て行って下さい。
!!
!!②お客様が改変したプログラムは、お客様と株式会社ジャストシステムの共同
!!の著作物となります。従って、改変したプログラムには、以下の表示を改変し
!!たプログラムの冒頭に行って下さい。
!!「このプログラムは、株式会社ジャストシステムから提供されたプログラムを
!!利用して作成したものです。」
!!
!!③このプログラム及びお客様が改変したプログラムに関するお問い合わせには、
!!弊社は一切お答えいたしません。
!!
!!④弊社は、このプログラムがお客様の使用目的に適合することの保証は行いま
!!せん。このプログラムの使用結果につきましては、お客様の責任とさせていた
!!だきます。
!!
!!**********************************************************************
!!　（Ｃ）　1993　株式会社ジャストシステム 
!!**********************************************************************

!!#####################################################
!! マクロ名（会話）                                   #
!! 見出し（一太郎と会話を）                           #
!! ファイル名（JELIZA.TXT）                           #
!!                                                    #
!!      Ｊ・ＥＬＩＺＡ   1993/03/08  by Gian Luca     #
!!                                                    #
!!  ○はじめに                                        #
!!    人工無能、ＥＬＩＺＡのタイプの会話プログラムで  #
!!  す。Ｊ には人工無能と日本語とジャストシステムの   #
!!  ３つの意味が入っています。単なるおもちゃなので、  #
!!  ペットのように暇なときに相手をしてあげて下さい。  #
!!  注意事項としては、次の３つです。                  #
!!    1.日光が嫌い                                    #
!!    2.水が嫌い                                      #
!!    3.夜の１２時以降はエサを与えない                #
!!  以上です。                                        #
!!                                                    #
!!  ○使い方                                          #
!!    実際に実行すると、最初にタイトルが出ます。そし  #
!!  て、知識ファイル名を聞いてきます。（ファイルが存  #
!!  在しなくても構いません）続いて、学習 ON,OFF を決  #
!!  めると会話がスタートします。会話を終了するには、  #
!!  「ばいばい」、「バイバイ」、「さよなら」のどれか  #
!!  または、「＠最後の挨拶」で設定した文を入力すれば  #
!!  終わります。（ＥＳＣでも終わります。）            #
!!                                                    #
!!  ○知識ファイルについて                            #
!!    最初に、知識ファイルを読み込んで、知識ベースを  #
!!  作成します。このファイルは、テキスト形式なので、  #
!!  エディタなどで編集可能です。最初に学習を ON にす  #
!!  ると、会話学習結果を知識ファイルに書き出します。  #
!!    知識ベースは、キーワードとそれに対する複数個の  #
!!  応答として記録されています。また、会話に人格を持  #
!!  たせるために予約キーワードがあります。予約キーワ  #
!!  ード名は固定ですが、その応答は編集可能です。      #
!!                                                    #
!!  ○知識ファイルの書式                              #
!!  「キーワード」    行先頭から始まる                #
!!  「応答」          キーワード後、空白から始まる    #
!!                                                    #
!!   （例）                                           #
!!  _____________________________                     #
!!  |コンピュータ             <- キーワード1          #
!!  |  コンピュータが嫌い？   <- 返答1                #
!!  |  頭痛がする！           <- 返答2                #
!!  |上司                     <- キーワード2          #
!!  |  そいつが嫌いなんだろ                           #
!!  | .....                                           #
!!                                                    #
!!  ＜予約キーワード＞                                #
!!  ＠最初の挨拶      会話開始時                      #
!!  ＠最後の挨拶      会話終了チェック、会話終了時    #
!!  ＠受け流し        キーワードが知識外の時          #
!!  ＠繰り返し        同じ文を入力した時              #
!!  ＠空文            リターンだけ入力した時          #
!!                                                    #
!!  ○制限、その他                                    #
!!  1.多分、知識ファイルは、大きすぎるとまずいので、  #
!!    変な動作をしたら、適当に編集して下さい。        #
!!  2.キーワードに一致しないと「＠受け流し」ばっかり  #
!!    してしまいます。キーワードは、字種区切りして、  #
!!    ひらがな以外で最も長いものを選びます。（区切り  #
!!    がないか、文が短いと全体をキーワードにする）    #
!!    だから、入力に漢字、カタカナを使った方が、キー  #
!!    ワードに一致しやすいと思います。                #
!!                                                    #
!!  ○最後に                                          #
!!  ・文字列添字の配列を活用させてもらいました。      #
!!  ・仮想記憶なんかあるともっとすごい。              #
!!  ・ちょっと遅いのが気になる。                      #
!!  ・バグがあったらごめんなさい。                    #
!!  ・データファイル名は jeliza.dat です              #
!!                                                    #
!!  ○参考文献                                        #
!!  「Ｔｈｅ Ｐｌａｙ ｏｆ Ｗｏｒｄｓ」、ＡＳＣＩＩ   #
!!  Ｈ・シルト：「Ｃで学ぶＡＩ」、マグロウヒル        #
!!                                                    #
!!#####################################################

    call main

!!-----------------------------------------------------
!! main         : 初期設定、会話、終了処理            |
!! 入力         : なし                                |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub main

    ErrorBreakMode 0,0,0

    $dat_file = "jeliza.dat"            !! データファイル名

    call タイトル
    call 初期設定
    call 知識読込 $知識ファイル名
    call 会話処理
    if( $学習 = TRUE )
        call 知識保存 $知識ファイル名
    end if

end sub

!!*****************************************************
!! 初期設定     : 知識ファイル名、学習、乱数を設定    *
!! 利用方法     : 1. call 初期設定                    *
!!*****************************************************

!!-----------------------------------------------------
!! タイトル     : 気持ちの問題                        |
!! 入力         : なし                                |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub タイトル

    Message( "Ｊ・ＥＬＩＺＡ" , 0 )

end sub

!!-----------------------------------------------------
!! 初期設定     : 知識ファイル名、学習、乱数等設定    |
!! 入力         : なし                                |
!! 出力         : $学習,$知識ファイル名               |
!!-----------------------------------------------------
sub 初期設定

    call 履歴初期化
    $繰り返し数 = 0

    $知識ファイル名 = ""
    if( existfile($dat_file) )
        $知識ファイル名 = $dat_file
    else
        %GOF=GETOPTIONFILE()
        %path=BREAKDOWNPATH( %GOF("マクロ") )
        %drive=%path("drive")
        %dir=%path("directory")
        $知識ファイル名 = %drive & %dir & $dat_file
    end if

    %確定 = FALSE
    if( Exact($知識ファイル名,"") <> TRUE )
        Guidance "知識ファイル = " & $知識ファイル名
        SELECT CASE  Alert( "知識ファイル = " & $知識ファイル名 )
            CASE 1
                %確定 = TRUE
            CASE 2
                %確定 = FALSE
            CASE ELSE
                Guidance ""
                STOP            !! エスケープ終了
        END SELECT
        Guidance ""
    end if

    if( %確定 <> TRUE )
        Guidance "知識ファイルを指定してください"
        $知識ファイル名 = InputFile("","*.dat")
        Guidance ""
        if( Exact($知識ファイル名,"") = TRUE )
            STOP
        end if
    end if

    Guidance "知識ファイルに学習結果を保存"
    SELECT CASE  Alert( "会話学習する" )
        CASE 1
            $学習 = TRUE
        CASE 2
            $学習 = FALSE
        CASE ELSE
            Guidance ""
            STOP            !! エスケープ終了
    END SELECT
    Guidance ""

end sub

!!-----------------------------------------------------
!! 履歴初期化   : 会話履歴バッファの初期化            |
!! 入力         : なし                                |
!! 出力         : $履歴(),$履歴最大数                 |
!!-----------------------------------------------------
sub 履歴初期化

    $履歴最大数 = 15
    for %添字 = 1 to $履歴最大数
        $履歴(%添字) = ""
    next

end sub

!!-----------------------------------------------------
!! 履歴登録     : 会話履歴バッファへの登録            |
!! 入力         : 文                                  |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub 履歴登録( %文 )

    %置換 = 1
    %最短長 = 100
    if( Len( %文 ) >= 8 )
        for %添字 = 1 to $履歴最大数
            %長さ = Len( $履歴( %添字 ) )
            if( %長さ < %最短長 )
                %置換 = %添字
                %最短長 = %長さ
            end if
        next
        $履歴( %置換 ) = %文
    end if

end sub

!!-----------------------------------------------------
!! 履歴出力     : 会話履歴からのデータ取得            |
!! 入力         : なし                                |
!! 出力         : 文                                  |
!!-----------------------------------------------------
function 履歴出力

    %有効数 = 0
    for %数 = 1 to $履歴最大数
        if( Exact($履歴( %数 ),"") = FALSE )
            %有効数 = %有効数 + 1
            %有効( %有効数 ) = %数
        end if
    next

    if( %有効数 <> 0 )
        %添字 = 正数乱数( %有効数 )
        履歴出力 = $履歴( %有効( %添字 ) )
        $履歴( %有効( %添字 ) ) = ""
    else
        履歴出力 = "誰がなんと言おうと、カレーが好きだ"
    end if
    Remove( %有効 )  !! 必要？

end function

!!*****************************************************
!! 会話処理     : 知識を学習しながら会話する          *
!! 利用方法     : 1. 受け流し設定                     *
!!              : 2. 知識読込                         *
!!              : 3. 会話処理                         *
!!              : 4. 知識保存                         *
!!*****************************************************

!!-----------------------------------------------------
!! 会話処理     : 会話のループ                        |
!! 入力         : なし                                |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub 会話処理

    $質問中 = TRUE
    $注目語(1) = "＠最初の挨拶"
    $注目語数 = 1
    $出力文 = 最初の挨拶()

    do
	Remove( $入力文 )
        $入力文 = 文字入力( $出力文 )
        if( NOT IsBlank($入力文) )
            $入力文 = Zen(Clean(Trim( $入力文 )))
        end if

        if( IsBlank( $入力文 ) OR \\
            最後の挨拶？( $入力文 ) = TRUE )
            $出力文 = 最後の挨拶()
            Message( $出力文 )
            exit do
        elseif( 正数乱数(100) = 50 )
            $出力文 = "ちょっと都合が悪いんで。" & 最後の挨拶()
            Message( $出力文 )
            exit do
        elseif( $繰り返し数 > 15 )
            $出力文 = "同じことばっかり言って。" & 最後の挨拶()
            Message( $出力文 )
            exit do
        elseif( Exact($入力文,"") = TRUE )
            $出力文 = 空文返答()
        elseif( 繰り返し？() = TRUE )
            $出力文 = 繰り返し返答( $入力文 )
        else
            call 履歴登録( $入力文 )
            call 字種区切り( $入力文 )
            if( $質問中 = TRUE )
                call 会話学習( $入力文 )
            end if
            call 注目語決定
            call 出力文決定
        end if

        $前入力文 = $入力文
    loop

end sub

!!-----------------------------------------------------
!! 最初の挨拶   : 「こんにちは」、「やあ元気」など    |
!! 入力         : なし                                |
!! 出力         : 文                                  |
!!-----------------------------------------------------
function 最初の挨拶

    if( Exist( $知識( "＠最初の挨拶" ) ) = FALSE )
        $知識( "＠最初の挨拶" , 1 ) = "こんにちは"
        %添字 = 1
    else
        %個数 = Size( $知識( "＠最初の挨拶" ) )
        %添字 = 正数乱数( %個数 )
    end if
    最初の挨拶 = $知識( "＠最初の挨拶" , %添字 )

end function

!!-----------------------------------------------------
!! 最後の挨拶   : 「さようなら」、「じゃまた」など    |
!! 入力         : なし                                |
!! 出力         : 文                                  |
!!-----------------------------------------------------
function 最後の挨拶

    if( Exist( $知識( "＠最後の挨拶" ) ) = FALSE )
        $知識( "＠最後の挨拶" , 1 ) = "さようなら"
        %添字 = 1
    else
        %個数 = Size( $知識( "＠最後の挨拶" ) )
        %添字 = 正数乱数( %個数 )
    end if
    最後の挨拶 = $知識( "＠最後の挨拶" , %添字 )

end function

!!-----------------------------------------------------
!! 最後の挨拶？ : $知識( "＠最後の挨拶" )に一致？     |
!! 入力         : 入力文                              |
!! 出力         : 一致 TRUE  不一致 FALSE             |
!!-----------------------------------------------------
function 最後の挨拶？( %挨拶 )

    %出力 = FALSE
    if( Find( "ばいばい" , %挨拶 ) > 0 OR \\
        Find( "バイバイ" , %挨拶 ) > 0 OR \\
        Find( "さよなら" , %挨拶 ) > 0 OR \\
        Find( "さようなら" , %挨拶 ) > 0 )
        %出力 = TRUE
    end if

    if( %出力 = FALSE AND \\
        Exist( $知識( "＠最後の挨拶" ) ) = TRUE )
        foreach %要素 in $知識( "＠最後の挨拶" )
            if( Exact( %挨拶 , %要素 , 4 ) = TRUE )
                %出力 = TRUE
                exit foreach
            end if
        next
    end if

    最後の挨拶？ = %出力

end function

!!-----------------------------------------------------
!! 繰り返し返答 : 「同じことを言うな」など            |
!! 入力         : 入力文                              |
!! 出力         : 出力文                              |
!!-----------------------------------------------------
function 繰り返し返答( %文 )

    $質問中 = FALSE
    $繰り返し数 = $繰り返し数 + 1
    %数 = 正数乱数( 4 )

    if( %数 > 3 )
        繰り返し返答 = "こっちも『" & %文 & "』"
    else
        if( Exist( $知識( "＠繰り返し" ) ) = FALSE )
            $知識( "＠繰り返し" , 1 ) = "同じことを言うな"
            %添字 = 1
        else
            %個数 = Size( $知識( "＠繰り返し" ) )
            %添字 = 正数乱数( %個数 )
        end if
        繰り返し返答 = $知識( "＠繰り返し" , %添字 )
    end if

end function

!!-----------------------------------------------------
!! 繰り返し？   : 会話履歴中に入力文が存在            |
!! 入力         : なし                                |
!! 出力         : 一致 TRUE  不一致 FALSE             |
!!-----------------------------------------------------
function 繰り返し？()

    繰り返し？ = FALSE
    if( $前入力文 <> NIL AND Exact($入力文,$前入力文,4) = TRUE )
        繰り返し？ = TRUE
    else
        for %添字 = 1 to $履歴最大数
            if( Exact($入力文,$履歴(%添字),4) = TRUE )
                繰り返し？ = TRUE
                exit for
            end if
        next
    end if

end function

!!-----------------------------------------------------
!! 空文返答     : 「何かいってよ」など                |
!! 入力         : なし                                |
!! 出力         : 文                                  |
!!-----------------------------------------------------
function 空文返答

    $質問中 = FALSE
    %数 = 正数乱数( 20 )
    SELECT CASE %数
        CASE 1
            空文返答 = "確か「" & 履歴出力() & "」って言ってたよ"
        CASE 2
            空文返答 = "「" & 履歴出力() & "」って言ったの覚えてる？"
        CASE 3
            空文返答 = "この前の「" & 履歴出力() & "」って発言は納得いかんな"
        CASE 4
            空文返答 = "「" & 履歴出力() & "」って発言を詳しく聞かせてよ"
        CASE 5
            %数字 = Zen(LeftB(ThisTime,2))
            if( Code( %数字 ) = Code( "０" ) )
                %数字 = RightB( %数字 , 2 )
            end if
            空文返答 = "もう" & %数字 & "時か"
        CASE 6
            空文返答 = "今年は西暦" & Zen(LeftB(ThisDate,4)) & "年です"
        CASE 7
            %数字 = Zen(MidB(ThisDate,6,2))
            if( Code( %数字 ) = Code( "０" ) )
                %数字 = RightB( %数字 , 2 )
            end if
            空文返答 = %数字 & "月は忙しいな"
        CASE 8
            %数字 = Zen(RightB(ThisDate,2))
            if( Code( %数字 ) = Code( "０" ) )
                %数字 = RightB( %数字 , 2 )
            end if
            空文返答 = "あれ、今日は" & %数字 & "日なのか"
        CASE 9
            %キー = キー出力()
            空文返答 = "ところであなた、「" & %キー & "」って知ってる？"
            $質問中 = TRUE
        CASE 10
            %キー = キー出力()
            空文返答 = "暇そうだから、「" & %キー & "」って教えて"
            $質問中 = TRUE
        CASE 10
            %キー = キー出力()
            空文返答 = "お願いだから、「" & %キー & "」を説明して"
            $質問中 = TRUE
        CASE 11
            %キー = キー出力()
            空文返答 = "「" & %キー & "」について詳しく知りたいな"
            $質問中 = TRUE
        CASE ELSE
            if( Exist( $知識( "＠空文" ) ) = FALSE )
                $知識( "＠空文" , 1 ) = "何か言ってもらわないと"
                %添字 = 1
            else
                %個数 = Size( $知識( "＠空文" ) )
                %添字 = 正数乱数( %個数 )
            end if
            空文返答 = $知識( "＠空文" , %添字 ) 
    END SELECT

end function

!!-----------------------------------------------------
!! 会話学習     : 質問に対する返答の記憶              |
!! 入力         : 質問に対する返答                    |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub 会話学習( %返答 )

    for %添字 = 1 to $注目語数
        %キー = $注目語( %添字 )
        if( Exist( $知識( %キー ) ) = TRUE )
            %既存 = FALSE
            %要素数 = Size( $知識( %キー ) )
            for %番号 = 1 to %要素数
                if( Exact(%返答,$知識(%キー,%番号),4) = TRUE )
                    %既存 = TRUE
                    exit for
                end if
            next
            if( %既存 = FALSE )
                $知識( %キー , %要素数+1 ) = %返答
            end if
        else
            $知識( %キー , 1 ) = %返答
        end if
    next

end sub

!!-----------------------------------------------------
!! 注目語決定   : 入力文から注目語候補を決める        |
!! 入力         : なし                                |
!! 出力         : $注目語($最重要)                    |
!!-----------------------------------------------------
sub 注目語決定

    Remove( $注目語 )
    $注目語数 = 0
    $最重要 = 0

    if( $形態素数 <= 1 OR Len( $入力文 ) <= 5 )
        $注目語(1) = $入力文
        $注目語数 = 1
        $最重要 = 1
    else
        $注目語数 = 0
        $最重要 = 0
        for %添字 = 1 to $形態素数
            %字種 = Code( $形態素(%添字) )
            if( %字種 = 1 OR %字種 = 2 OR %字種 = 4 )
                $注目語数 = $注目語数 + 1
                $注目語($注目語数) = $形態素(%添字)
                if( $注目語数 = 1 )
                    $最重要 = 1
                    %最大長 = Len( $注目語($最重要) )
                else
                    %長さ = Len( $注目語($注目語数) )
                    if( %長さ > %最大長 OR \\
                        ( %長さ = %最大長 AND \\
                        字種(Code($注目語($注目語数))) > \\
                        字種(Code($注目語($最重要))) ) )
                        $最重要 = $注目語数
                        %最大長 = %長さ
                    end if
                end if
            end if
        next
        if( $注目語数 = 0 )
            $注目語(1) = $形態素(1)
            $注目語数 = 1
            $最重要 = 1
        end if
    end if

end sub

!!-----------------------------------------------------
!! 出力文決定   : 知識と注目語から出力文を決める      |
!! 入力         : なし                                |
!! 出力         : $出力文                             |
!!-----------------------------------------------------
sub 出力文決定

    %キー = $注目語( $最重要 )
    if( Exist( $知識( %キー ) ) = FALSE )
        %数 = 正数乱数(35)
        SELECT CASE %数
            CASE 1
                $出力文 = "ところで、「" & 履歴出力() & "」って言ったよね"
                $質問中 = FALSE
            CASE 2
                $出力文 = "さっきこんな事を言ったね：「" & 履歴出力() & "」"
                $質問中 = FALSE
            CASE 3
                $出力文 = "「" & 履歴出力() & "」って発言は納得いかんな"
                $質問中 = FALSE
            CASE 4
                $出力文 = "「" & %キー & "」って何なの？"
                $質問中 = TRUE
            CASE 5
                $出力文 = "「" & %キー & "」について教えて下さい"
                $質問中 = TRUE
            CASE 6
                $出力文 = "「" & %キー & "」は知らないな"
                $質問中 = TRUE
            CASE 7
                $出力文 = "「" & %キー & "」の意味を教えて"
                $質問中 = TRUE
            CASE 8
                %キー = キー出力()
                $出力文 = "ところで「" & %キー & "」って何なの？"
                $質問中 = TRUE
            CASE 9
                %キー = キー出力()
                $出力文 = "あれっ、「" & %キー & "」って何だったっけ？"
                $質問中 = TRUE
            CASE 10
                %キー = キー出力()
                $出力文 = "話は変わるけど、「" & %キー & "」って言葉が気になって"
                $質問中 = TRUE
            CASE 11
                %キー = キー出力()
                $出力文 = "君、「" & %キー & "」を説明しなさい"
                $質問中 = TRUE
            CASE 12
                %数字 = Zen(LeftB(ThisTime,2))
                if( Code( %数字 ) = Code( "０" ) )
                    %数字 = RightB( %数字 , 2 )
                end if
                $出力文 = "今は" & %数字 & "時だね"
                $質問中 = FALSE
            CASE 13
                %数字 = Zen(LeftB(ThisDate,4))
                $出力文 = "確か今年は" & %数字 & "年だね"
                $質問中 = FALSE
            CASE 14
                %数字 = Zen(MidB(ThisDate,6,2))
                if( Code( %数字 ) = Code( "０" ) )
                    %数字 = RightB( %数字 , 2 )
                end if
                $出力文 = "ところで、今月は" & %数字 & "月だね"
                $質問中 = FALSE
            CASE 15
                %数字 = Zen(RightB(ThisDate,2))
                if( Code( %数字 ) = Code( "０" ) )
                    %数字 = RightB( %数字 , 2 )
                end if
                $出力文 = "今日は" & %数字 & "日だね"
                $質問中 = FALSE
            CASE ELSE
                $出力文 = 受け流し出力()
                $質問中 = TRUE
        END SELECT
    else
        %個数 = Size( $知識( %キー ) )
        %添字 = 正数乱数( %個数 )
        $出力文 = $知識( %キー, %添字 )
        $質問中 = FALSE
    end if

end sub

!!-----------------------------------------------------
!! 受け流し出力 : 分からないときの文生成              |
!! 入力         : なし                                |
!! 出力         : 出力文                              |
!!-----------------------------------------------------
function 受け流し出力

    if( Exist( $知識( "＠受け流し" ) ) = FALSE )
        $知識( "＠受け流し" , 1 ) = "そうだったのか"
        %添字 = 1
    else
        %個数 = Size( $知識( "＠受け流し" ) )
        %添字 = 正数乱数( %個数 )
    end if
    受け流し出力 = $知識( "＠受け流し" , %添字 )

end function

!!-----------------------------------------------------
!! キー出力     : 知識にあるキーを出力する            |
!! 入力         : なし                                |
!! 出力         : キー                                |
!!-----------------------------------------------------
function キー出力

    %最小応答数 = 100
    %添字配列 = ArrayIndex( $知識 )
    foreach %キー in %添字配列
        if( Code( %キー ) <> Code( "＠" ) )
            %応答数 = Size( $知識(%キー) )
            if( %応答数 < %最小応答数 )
                %候補 = %キー
                %最小応答数 = %応答数
            end if
        end if
    next

    Remove( $注目語 )
    $注目語数 = 1
    $最重要 = 1
    if( %候補 <> NIL )
        $注目語(1),キー出力 = %候補
    else
        $注目語(1),キー出力 = "キーマカレー"
    end if

end function

!!*****************************************************
!! 知識入出力   : 知識のファイルへの読み書き          *
!! 利用方法     : 1. 知識読込 （会話開始前）          *
!!              : 2. 知識保存 （会話終了後）          *
!!*****************************************************

!!-----------------------------------------------------
!! 知識読込     : ファイルから知識を読み込む          |
!! 入力         : ファイル名                          |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub 知識読込( %名前 )

    Guidance( "知識ファイル " & %名前 & " を読込中" )
    %ファイル = 1
    %番号 = 1
    Open( %ファイル , %名前 , "INPUT" )
    if missing( %ファイル ) = TRUE
        $知識( "＠受け流し" , 1 ) = "はいはい"
        $知識( "＠最初の挨拶" , 1 ) = "こんにちは"
        $知識( "＠別れの挨拶" , 1 ) = "さようなら"
        $知識( "＠繰り返し" , 1 ) = "同じことばっかりだね"
        $知識( "＠空文" , 1 ) = "黙ってないで"
    else
        do while missing( %ファイル ) <> TRUE
            LineInput( %ファイル , %文字列 )
            %コード = Code( %文字列 )
            if( %コード=Code(" ") OR %コード=Code("　") )
                %反応 = TRUE
            else
                %反応 = FALSE
            end if
            %文字列 = Zen(Clean(Trim(%文字列)))   !! DOSの1ah
            if( Code(%文字列) <> Code("") )
                if( %反応 = TRUE )
                    $知識(%キー,%番号) = %文字列
                    %番号 = %番号 + 1
                else
                    %キー = %文字列
                    %番号 = 1
                end if
            end if
        loop
        close( %ファイル )
    end if
    Guidance( "" )

end sub

!!-----------------------------------------------------
!! 知識保存     : ファイルに知識を保存する            |
!! 入力         : ファイル名                          |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub 知識保存( %名前 )

    Guidance( "知識ファイル " & %名前 & " に保存中" )
    %ファイル = 1
    Create( %ファイル , %名前 , "NEWOLD" )
    if missing( %ファイル ) = TRUE
        message( "知識が保存できませんでした" )
    else
        %添字配列 = ArrayIndex( $知識 )
        foreach %キー in %添字配列
            LinePrint( %ファイル , %キー )
            foreach %反応 in $知識(%キー)
                LinePrint( %ファイル , "　" & %反応 )
            next
        next
        close( %ファイル )
    end if
    Guidance( "" )

end sub

!!-----------------------------------------------------
!! 知識表示     : 知識を表示する                      |
!! 入力         : なし                                |
!! 出力         : なし                                |
!!-----------------------------------------------------
sub 知識表示
    %添字配列 = ArrayIndex( $知識 )
    foreach %キー in %添字配列
        %番号 = 1
        foreach %反応 in $知識(%キー)
            message( "(" & %キー & "," & %番号 & ") -> " & %反応 )
            %番号 = %番号 + 1
        next
    next
end sub

!!*****************************************************
!! 形態素解析   : べた書き文字列を字種区切りする      *
!! 利用方法     : 1. call 字種区切り( "..." )         *
!!              : 2. $形態素(1,...,$形態素数)         *
!!*****************************************************

!!-----------------------------------------------------
!! 字種区切り   : 文字列を字種区切りする              |
!! 入力         : べた書き文字列                      |
!! 出力         : $形態素（$形態素数)                 |
!!-----------------------------------------------------
sub 字種区切り( %入力 )

    Remove( $形態素 )
    $形態素数 = 1
    %出力 = ""
    %位置 = 1
    %文字 = Mid(%入力,%位置,1)
    %コード = Code( %文字 )
    %現種類 = 字種( %コード )
    %前種類 = -1
    do while %現種類 <> 0
        if( %前種類 = -1 )
            %出力 = %文字
        elseif( %現種類 = %前種類 )
            %出力 = %出力 & %文字
        else
            $形態素($形態素数) = %出力
            $形態素数 = $形態素数 + 1
            %出力 = %文字
        end if
        %前種類 = %現種類
        %位置 = %位置 + 1
        %文字 = Mid( %入力,%位置,1 )
        %コード = Code( %文字 )
        %現種類 = 字種( %コード )
    loop
    if( %前種類 <> -1 )
        $形態素($形態素数) = %出力
    else
        $形態素数 = 0
    end if

end sub

!!-----------------------------------------------------
!! 字種         : 文字種を調べる                      |
!! 入力         : 文字コード                          |
!! 出力         : 空文字列 "" 0  漢字 1  カタカナ 2   |
!!              : ひらがな 3  英数字 4  それ以外 5    |
!!-----------------------------------------------------
function 字種( %コード )

    if( %コード = Code("") )
        字種 = 0
    elseif( 漢字？(%コード) = TRUE )
        字種 = 1
    elseif( カタカナ？(%コード) = TRUE )
        字種 = 2
    elseif( ひらがな？(%コード) = TRUE )
        字種 = 3
    elseif( 英数字？(%コード) = TRUE )
        字種 = 4
    else
        字種 = 5
    end if

end function

!!-----------------------------------------------------
!! 漢字？       : 文字が漢字か調べる                  |
!! 入力         : 文字コード                          |
!! 出力         : 漢字 TRUE  漢字以外 FALSE           |
!!-----------------------------------------------------
function 漢字？( %コード )

    if( %コード>=Code("亜") AND %コード<=Code("龠") )
        漢字？ = TRUE
    else
        漢字？ = FALSE
    end if

end function

!!-----------------------------------------------------
!! カタカナ？   : 文字がカタカナか調べる              |
!! 入力         : 文字コード                          |
!! 出力         : カタカナ TRUE  カタカナ以外 FALSE   |
!!-----------------------------------------------------
function カタカナ？( %コード )

    if( ( %コード>=Code("ァ") AND %コード<=Code("ヶ") ) OR \\
        %コード=Code("ー") )
        カタカナ？ = TRUE
    else
        カタカナ？ = FALSE
    end if

end function

!!-----------------------------------------------------
!! ひらがな？   : 文字がひらがなか調べる              |
!! 入力         : 文字コード                          |
!! 出力         : ひらがな TRUE  ひらがな以外 FALSE   |
!!-----------------------------------------------------
function ひらがな？( %コード )

    if( %コード>=Code("ぁ") AND %コード<=Code("ん") )
        ひらがな？ = TRUE
    else
        ひらがな？ = FALSE
    end if

end function

!!-----------------------------------------------------
!! 英数字？     : 文字が英数字か調べる                |
!! 入力         : 文字コード                          |
!! 出力         : 英数字 TRUE  英数字以外 FALSE       |
!!-----------------------------------------------------
function 英数字？( %コード )

    if( (%コード>=Code("０") AND %コード<=Code("９")) OR \\
        (%コード>=Code("Ａ") AND %コード<=Code("ｚ")) )
        英数字？ = TRUE
    else
        英数字？ = FALSE
    end if

end function

!!*****************************************************
!! 乱数生成     : 時間を種に乱数（１〜ｎ）を発生する  *
!! 利用方法     : 1. $正数 = 正数乱数( $最大値 )      *
!!*****************************************************

!!-----------------------------------------------------
!! 正数乱数     : 正の整数                            |
!! 入力         : 最大値                              |
!! 出力         : １〜最大値までの整数                |
!!-----------------------------------------------------
function 正数乱数( %最大値 )
    %数 = ThisMinute() & ThisSecond()
    正数乱数 = ( %数 MOD %最大値 ) + 1
end function

!!-----------------------------------------------------
!! ThisSecond   : 現在秒の文字列を返す                |
!! 入力         : なし                                |
!! 出力         : 現在秒の文字列  "05","59","00"      |
!!-----------------------------------------------------
function ThisSecond()
    ThisSecond = RightB(ThisTime,2)
end function

!!-----------------------------------------------------
!! ThisMinute   : 現在分の文字列を返す                |
!! 入力         : なし                                |
!! 出力         : 現在分の文字列  "15","09","41"      |
!!-----------------------------------------------------
function ThisMinute()
    ThisMinute = MidB(ThisTime,4,2)
end function

